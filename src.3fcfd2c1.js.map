{"version":3,"sources":["index.js"],"names":["galleryItems","preview","original","description","listGallery","document","querySelector","modalWindow","img","closeBtn","makeImageItemtemplate","itemsCard","makeImagesItems","map","join","imgSrcGhange","a","src","imgAltGhange","alt","onImg","event","target","nodeName","preventDefault","targetImg","classList","toggle","dataset","source","getAttribute","console","log","onCloseModal","e","insertAdjacentHTML","addEventListener"],"mappings":";;;AA4IG,aA5IH,QAAA,oBAEA,MAAMA,EAAe,CACjB,CACEC,QACE,uFACFC,SACE,uFACFC,YAAa,mBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,6BAEf,CACEF,QACE,wEACFC,SACE,wEACFC,YAAa,qBAEf,CACEF,QACE,0EACFC,SACE,0EACFC,YAAa,iBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,yBAEf,CACEF,QACE,2EACFC,SACE,2EACFC,YAAa,yBAEf,CACEF,QACE,4EACFC,SACE,4EACFC,YAAa,oBAEf,CACEF,QACE,6EACFC,SACE,6EACFC,YAAa,yBAIXC,EAAcC,SAASC,cAAc,eACrCC,EAAcF,SAASC,cAAc,gBACrCE,EAAMH,SAASC,cAAc,oBAC7BG,EAAWJ,SAASC,cAAc,wCAKlCI,EAAwBC,yIAUnBA,EAAUV,gCACFU,EAAUT,yBAClBS,EAAUR,sCAMfS,EAAkBZ,EAAaa,IAAIH,GAAuBI,KAAK,IAQvE,SAASC,EAAcC,GACrBR,EAAIS,IAAMD,EAGZ,SAASE,EAAcF,GACrBR,EAAIW,IAAMH,EAKV,SAASI,EAAOC,GACVA,GAAyB,OAAzBA,EAAMC,OAAOC,SAGrB,CACAF,EAAMG,iBACAC,MAAAA,EAAYJ,EAAMC,OAExBf,EAAYmB,UAAUC,OAAO,WAG7BZ,EAAcU,EAAUG,QAAQC,QAGhCX,EAFYO,EAAUK,aAAc,MAAOT,EAAMC,OAAOM,QAAQC,SAIhEE,QAAQC,IAAIxB,IAIV,SAASyB,EAAcC,GACHA,EAAEZ,OACpBf,EAAYmB,UAAUC,OAAO,WAG7BZ,EAAc,IACdG,EAAc,IA3ChBd,EAAY+B,mBAAmB,aAAcvB,GAG7CR,EAAYgC,iBAAiB,QAAShB,GACtCX,EAAS2B,iBAAiB,QAASH","file":"src.3fcfd2c1.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst galleryItems = [\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\n      description: 'Hokkaido Flower',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\n      description: 'Container Haulage Freight',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\n      description: 'Aerial Beach View',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\n      description: 'Flower Blooms',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\n      description: 'Alpine Mountains',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\n      description: 'Mountain Lake Sailing',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\n      description: 'Alpine Spring Meadows',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\n      description: 'Nature Landscape',\n    },\n    {\n      preview:\n        'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\n      original:\n        'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\n      description: 'Lighthouse Coast Sea',\n    },\n  ];\n\n  const listGallery = document.querySelector('.js-gallery');\n  const modalWindow = document.querySelector('.js-lightbox');\n  const img = document.querySelector('.lightbox__image');\n  const closeBtn = document.querySelector('button[data-action=\"close-lightbox\"]');\n  \n \n  \n\n  const makeImageItemtemplate = itemsCard => {\n  \n\nreturn `<li class=\"gallery__item\">\n  <a\n    class=\"gallery__link\"\n    href=\"#\"\n  >\n    <img\n      class=\"gallery__image\"\n      src=\"${itemsCard.preview}\"\n      data-source=\"${itemsCard.original}\"\n      alt=\"${itemsCard.description}\"\n    />\n  </a>\n</li>`;\n};\n\n  const makeImagesItems = galleryItems.map(makeImageItemtemplate).join('');\n  listGallery.insertAdjacentHTML('afterbegin', makeImagesItems);\n\n\n  listGallery.addEventListener('click', onImg);\n  closeBtn.addEventListener('click', onCloseModal);\n\n\nfunction imgSrcGhange (a) {\n  img.src = a;\n};\n\nfunction imgAltGhange (a) {\n  img.alt = a;\n};\n\n\n\n  function onImg (event) {\n    if (event.target.nodeName != 'IMG') {\nreturn;\n    }\n{\nevent.preventDefault();\nconst targetImg = event.target;\n// console.log(targetImg.dataset);\nmodalWindow.classList.toggle(\"is-open\");\n// console.log(modalWindow);\n// img.src = targetImg.dataset.source;\nimgSrcGhange (targetImg.dataset.source);\nconst alt = targetImg.getAttribute( \"alt\", event.target.dataset.source);\n// img.alt = alt;\nimgAltGhange (alt);\n\nconsole.log(img);\n}  \n  }\n\n  function onCloseModal (e) {\n    const targetBtn = e.target;\n    modalWindow.classList.toggle(\"is-open\");\n    // img.src = \"\";\n    // img.alt = \"\";\n    imgSrcGhange (\"\");\n    imgAltGhange (\"\");\n    // console.log(img);\n  }\n\n"]}